#pragma once

#include "Singleton.h"

#include <SDL.h>

class InputManager : public Singleton<InputManager>
{
	// INFO: Grants the base class access to the private and protected
	// member variables and methods of the derived class, specifically
	// the constructor
	friend class Singleton<InputManager>;

private:
	Uint8* previousKeyboardState;
	const Uint8* KEYBOARD_STATE;
	int keyLength;

public:
	/// <summary>
	/// Clean up method during program termination
	/// </summary>
	void Clean() override;

	/// <summary>
	/// Receives all events generated by the user pressing the keyboard
	/// and performs specific functionality based on this
	/// </summary>
	void PollEvents();

	/// <summary>
	/// Detects whether a specific key has been pressed
	/// </summary>
	/// <param name="key">: The key to be checked</param>
	/// <returns>Returns true if the key was pressed</returns>
	inline bool GetKeyDown(SDL_Keycode key) { return !previousKeyboardState[key] && KEYBOARD_STATE[key]; }

private:
	InputManager();
};

